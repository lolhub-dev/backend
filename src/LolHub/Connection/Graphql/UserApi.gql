interface UserI {
	username: String!
	firstname: String!
	lastname: String!
	email: String!
	token: String!
}

type UnverifiedUser {
	username: String!
	firstname: String!
	lastname: String!
	email: String!
	token: String!
}

type VerifiedUser {
	username: String!
	firstname: String!
	lastname: String!
	email: String!
	token: String!
	verifiedDate: Int!
}

type VerifiedSummoner {
	username: String!
	firstname: String!
	lastname: String!
	email: String!
	token: String!
	verifiedDate: Int!
	summonerName: String!
}

union User = UnverifiedUser | VerifiedUser | VerifiedSummoner

type Query {
	helloWorld: String!
}

type Mutation {
	register(username: String!, firstname: String!, lastname: String!, email: String!, password: String!): User!
	login(
	username: String!
	, password: String!): User!
}